linux将自己的服务添加到系统service服务
1.前言
    我们在linux上要启动一个程序得时候，往往都是要写一堆路径，找到要启动得服务程序后再用./*** 启动服务。那么我们有没有快速启动方法吗，答案是肯定的。

2.service介绍
    简单说一下service运行过程。以iptables为例: service iptables start
    首先，sevice会去/etc/init.d下寻找iptables脚本，start是iptables脚本里的一个参数(你可以去查看networking这个脚本支持的参数)。然后告诉系统运行iptables这个脚本，剩下的事情就交给iptables脚本去做了，事实就是这么简单。至此，你们应该知道如何添加一个service命令了吧。
    编写一个脚本，然后把它放在/etc/init.d这个目录下，再用＂service 脚本名字＂运行即可。如果是要开机自动启动那就得用chkconfig命令了。

注意：(1)service这个命令往往是即时生效，不用开关机，但是重启后服务会回到默认状态。
     (2)在init.d里面得脚本是没有后缀名的

    设置开机自动启动
    chkconfig --add iptables
    chkconfig iptables on/off    //重启后永久生效

    若上面的方法不生效，则使用下面得方法。
    通过update-rc.d 命名设置开机自启动：
    cd /etc/init.d
    sudo update-rc.d test defaults 95
    注：其中数字95是脚本启动的顺序号，按照自己的需要相应修改即可，也可以不写。在你有多个启动脚本，而它们之间又有先后启动的依赖关系时你就知道这个数字的具体作用了。

    卸载启动脚本的方法：
    cd /etc/init.d
    sudo update-rc.d -f test remove

3.常见错误:
    (1)service启动任务时提示: program-service: unrecognized service
    这是因为我们还没有更改执行脚本的权限为可执行。chmod +x /etc/init.d/serviceName后重新执行上一个命令
    (2)添加到开机启动任务时提示: service *** does not support chkconfig
    解决方法：(在/etc/init.d/test添加两行注释)
    #!/bin/sh
    #添加的两行注释内容如下：
    # chkconfig:   2345 90 10
    # description: 服务说明文本
    注释的意思是，test服务必须在运行级2，3，4，5下被启动或关闭，启动的优先级是90，关闭的优先级是10
 　　在编辑其它类似服务时，也可能出现这种情况，解决方法基本类似

4.脚本格式
#!/bin/bash
# chkconfig: - 85 15
# description: 说明文本

# Source function library.

. /etc/rc.d/init.d/functions

# Start daemons functions.
start()
{
    echo -n $"Service start"
    #...
    RETVAL=$?
}

# Stop nginx daemons functions.
stop()
{
    echo -n $"Service stop"
    #...
    #killproc ...
    RETVAL=$?
}

# reload nginx service functions.
reload()
{

    echo -n $"Service reloading"
    #...
    #killproc ...
    RETVAL=$?
}

# See how we were called.
case "$1" in

start)
    start
    ;;

stop)
    stop
    ;;

reload)
    reload
    ;;

restart)
    stop
    start
    ;;

status)
    status $prog
    RETVAL=$?
    ;;

*)
    echo $"Usage: $prog {start|stop|restart|reload|status|help}"
    exit 1

esac

exit $RETVAL
